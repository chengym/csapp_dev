	.file	"cond-cmov.c"
	.text
	.globl	max
	.type	max, @function
max:
.LFB0:
	.cfi_startproc
	movl	4(%esp), %edx
	movl	8(%esp), %eax
	cmpl	%eax, %edx
	cmovge	%edx, %eax
	ret
	.cfi_endproc
.LFE0:
	.size	max, .-max
	.globl	wa_max
	.type	wa_max, @function
wa_max:
.LFB1:
	.cfi_startproc
	pushl	%ebx
	.cfi_def_cfa_offset 8
	.cfi_offset 3, -8
	movl	8(%esp), %ecx
	movl	12(%esp), %edx
	leal	17(%edx), %eax
	leal	23(%ecx), %ebx
	cmpl	%edx, %ecx
	cmovge	%ebx, %eax
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 4
	ret
	.cfi_endproc
.LFE1:
	.size	wa_max, .-wa_max
	.globl	wm_max
	.type	wm_max, @function
wm_max:
.LFB2:
	.cfi_startproc
	movl	4(%esp), %eax
	movl	8(%esp), %edx
	cmpl	%edx, %eax
	jge	.L7
	movl	%edx, %eax
	sall	$4, %eax
	addl	%edx, %eax
	ret
.L7:
	imull	$23, %eax, %eax
	ret
	.cfi_endproc
.LFE2:
	.size	wm_max, .-wm_max
	.globl	wm_max2
	.type	wm_max2, @function
wm_max2:
.LFB3:
	.cfi_startproc
	movl	4(%esp), %eax
	movl	8(%esp), %edx
	movl	%edx, %ecx
	sall	$4, %ecx
	cmpl	%edx, %eax
	cmovl	%ecx, %eax
	ret
	.cfi_endproc
.LFE3:
	.size	wm_max2, .-wm_max2
	.globl	wm_max3
	.type	wm_max3, @function
wm_max3:
.LFB4:
	.cfi_startproc
	movl	4(%esp), %ecx
	movl	8(%esp), %edx
	movl	%ecx, %eax
	cmpl	%edx, %ecx
	jge	.L13
	movl	%edx, %eax
	sall	$4, %eax
	addl	%edx, %eax
.L13:
	rep ret
	.cfi_endproc
.LFE4:
	.size	wm_max3, .-wm_max3
	.globl	abs
	.type	abs, @function
abs:
.LFB5:
	.cfi_startproc
	movl	4(%esp), %eax
	cltd
	xorl	%edx, %eax
	subl	%edx, %eax
	ret
	.cfi_endproc
.LFE5:
	.size	abs, .-abs
	.globl	cmul
	.type	cmul, @function
cmul:
.LFB6:
	.cfi_startproc
	movl	8(%esp), %edx
	movl	$0, %eax
	movl	%edx, %ecx
	imull	4(%esp), %ecx
	testl	%edx, %edx
	cmovne	%ecx, %eax
	ret
	.cfi_endproc
.LFE6:
	.size	cmul, .-cmul
	.globl	cmul2
	.type	cmul2, @function
cmul2:
.LFB7:
	.cfi_startproc
	movl	8(%esp), %eax
	cmpl	$1, %eax
	je	.L21
	imull	4(%esp), %eax
	ret
.L21:
	movl	4(%esp), %eax
	ret
	.cfi_endproc
.LFE7:
	.size	cmul2, .-cmul2
	.globl	cdiv
	.type	cdiv, @function
cdiv:
.LFB8:
	.cfi_startproc
	movl	8(%esp), %ecx
	movl	$0, %eax
	testl	%ecx, %ecx
	je	.L23
	movl	4(%esp), %eax
	cltd
	idivl	%ecx
.L23:
	rep ret
	.cfi_endproc
.LFE8:
	.size	cdiv, .-cdiv
	.globl	cdiv2
	.type	cdiv2, @function
cdiv2:
.LFB9:
	.cfi_startproc
	movl	8(%esp), %ecx
	cmpl	$1, %ecx
	je	.L27
	movl	4(%esp), %eax
	cltd
	idivl	%ecx
	ret
.L27:
	movl	4(%esp), %eax
	ret
	.cfi_endproc
.LFE9:
	.size	cdiv2, .-cdiv2
	.globl	cread
	.type	cread, @function
cread:
.LFB10:
	.cfi_startproc
	movl	4(%esp), %eax
	testl	%eax, %eax
	je	.L30
	movl	(%eax), %eax
	ret
.L30:
	movl	$0, %eax
	ret
	.cfi_endproc
.LFE10:
	.size	cread, .-cread
	.globl	se_max
	.type	se_max, @function
se_max:
.LFB11:
	.cfi_startproc
	movl	4(%esp), %edx
	movl	8(%esp), %ecx
	movl	%edx, %eax
	cmpl	%ecx, %edx
	jge	.L32
	addl	$1, lcount
	movl	%ecx, %eax
.L32:
	rep ret
	.cfi_endproc
.LFE11:
	.size	se_max, .-se_max
	.globl	arith
	.type	arith, @function
arith:
.LFB12:
	.cfi_startproc
	movl	4(%esp), %eax
	leal	3(%eax), %edx
	testl	%eax, %eax
	cmovs	%edx, %eax
	sarl	$2, %eax
	ret
	.cfi_endproc
.LFE12:
	.size	arith, .-arith
	.globl	lcount
	.bss
	.align 4
	.type	lcount, @object
	.size	lcount, 4
lcount:
	.zero	4
	.ident	"GCC: (Ubuntu 4.8.2-19ubuntu1) 4.8.2"
	.section	.note.GNU-stack,"",@progbits
