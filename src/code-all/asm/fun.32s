	.file	"fun.c"
	.text
	.globl	test_fun_a
	.type	test_fun_a, @function
test_fun_a:
.LFB0:
	.cfi_startproc
	pushl	%esi
	.cfi_def_cfa_offset 8
	.cfi_offset 6, -8
	pushl	%ebx
	.cfi_def_cfa_offset 12
	.cfi_offset 3, -12
	movl	12(%esp), %esi
	movl	$0, %eax
	movl	$0, %ecx
	movl	$1, %ebx
.L3:
	movl	%ebx, %edx
	sall	%cl, %edx
	testl	%esi, %edx
	setne	%dl
	movzbl	%dl, %edx
	xorl	%edx, %eax
	addl	$1, %ecx
	cmpl	$32, %ecx
	jne	.L3
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 8
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 4
	ret
	.cfi_endproc
.LFE0:
	.size	test_fun_a, .-test_fun_a
	.globl	fun_a
	.type	fun_a, @function
fun_a:
.LFB1:
	.cfi_startproc
	movl	4(%esp), %edx
	testl	%edx, %edx
	je	.L8
	movl	$0, %eax
.L7:
	xorl	%edx, %eax
	shrl	%edx
	jne	.L7
	jmp	.L6
.L8:
	movl	$0, %eax
.L6:
	andl	$1, %eax
	ret
	.cfi_endproc
.LFE1:
	.size	fun_a, .-fun_a
	.globl	fun_b
	.type	fun_b, @function
fun_b:
.LFB2:
	.cfi_startproc
	pushl	%ebx
	.cfi_def_cfa_offset 8
	.cfi_offset 3, -8
	movl	8(%esp), %ecx
	movl	$32, %edx
	movl	$0, %eax
.L11:
	movl	%ecx, %ebx
	andl	$1, %ebx
	addl	%eax, %eax
	orl	%ebx, %eax
	shrl	%ecx
	subl	$1, %edx
	jne	.L11
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 4
	ret
	.cfi_endproc
.LFE2:
	.size	fun_b, .-fun_b
	.globl	test_fun_b
	.type	test_fun_b, @function
test_fun_b:
.LFB3:
	.cfi_startproc
	pushl	%ebp
	.cfi_def_cfa_offset 8
	.cfi_offset 5, -8
	pushl	%edi
	.cfi_def_cfa_offset 12
	.cfi_offset 7, -12
	pushl	%esi
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushl	%ebx
	.cfi_def_cfa_offset 20
	.cfi_offset 3, -20
	subl	$4, %esp
	.cfi_def_cfa_offset 24
	movl	24(%esp), %ebp
	movl	$0, (%esp)
	movl	$0, %edx
	movl	$31, %edi
	movl	$1, %ebx
.L16:
	movl	%edi, %esi
	subl	%edx, %esi
	movl	%ebx, %eax
	movl	%edx, %ecx
	sall	%cl, %eax
	testl	%ebp, %eax
	je	.L14
	movl	%ebx, %eax
	movl	%esi, %ecx
	sall	%cl, %eax
	orl	%eax, (%esp)
.L14:
	addl	$1, %edx
	cmpl	$32, %edx
	jne	.L16
	movl	(%esp), %eax
	addl	$4, %esp
	.cfi_def_cfa_offset 20
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 16
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 12
	popl	%edi
	.cfi_restore 7
	.cfi_def_cfa_offset 8
	popl	%ebp
	.cfi_restore 5
	.cfi_def_cfa_offset 4
	ret
	.cfi_endproc
.LFE3:
	.size	test_fun_b, .-test_fun_b
	.globl	fun_c
	.type	fun_c, @function
fun_c:
.LFB4:
	.cfi_startproc
	pushl	%ebx
	.cfi_def_cfa_offset 8
	.cfi_offset 3, -8
	movl	8(%esp), %edx
	movl	$8, %eax
	movl	$0, %ecx
.L20:
	movl	%edx, %ebx
	andl	$16843009, %ebx
	addl	%ebx, %ecx
	shrl	%edx
	subl	$1, %eax
	jne	.L20
	movl	%ecx, %eax
	sarl	$16, %eax
	addl	%eax, %ecx
	movl	%ecx, %eax
	sarl	$8, %eax
	addl	%eax, %ecx
	movzbl	%cl, %eax
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 4
	ret
	.cfi_endproc
.LFE4:
	.size	fun_c, .-fun_c
	.globl	test_fun_c
	.type	test_fun_c, @function
test_fun_c:
.LFB5:
	.cfi_startproc
	pushl	%esi
	.cfi_def_cfa_offset 8
	.cfi_offset 6, -8
	pushl	%ebx
	.cfi_def_cfa_offset 12
	.cfi_offset 3, -12
	movl	12(%esp), %esi
	movl	$0, %eax
	movl	$0, %ecx
	movl	$1, %ebx
.L24:
	movl	%ebx, %edx
	sall	%cl, %edx
	testl	%esi, %edx
	setne	%dl
	movzbl	%dl, %edx
	addl	%edx, %eax
	addl	$1, %ecx
	cmpl	$32, %ecx
	jne	.L24
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 8
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 4
	ret
	.cfi_endproc
.LFE5:
	.size	test_fun_c, .-test_fun_c
	.globl	test_count_p
	.type	test_count_p, @function
test_count_p:
.LFB6:
	.cfi_startproc
	pushl	%esi
	.cfi_def_cfa_offset 8
	.cfi_offset 6, -8
	pushl	%ebx
	.cfi_def_cfa_offset 12
	.cfi_offset 3, -12
	movl	12(%esp), %esi
	movl	$0, %eax
	movl	$0, %ecx
	movl	$1, %ebx
.L28:
	movl	%ebx, %edx
	sall	%cl, %edx
	testl	%esi, %edx
	setne	%dl
	movzbl	%dl, %edx
	addl	%edx, %eax
	addl	$1, %ecx
	cmpl	$32, %ecx
	jne	.L28
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 8
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 4
	ret
	.cfi_endproc
.LFE6:
	.size	test_count_p, .-test_count_p
	.globl	count_p
	.type	count_p, @function
count_p:
.LFB7:
	.cfi_startproc
	movl	4(%esp), %edx
	testl	%edx, %edx
	je	.L33
	movl	$0, %eax
.L32:
	movl	%edx, %ecx
	shrl	$31, %ecx
	addl	%ecx, %eax
	addl	%edx, %edx
	jne	.L32
	rep ret
.L33:
	movl	$0, %eax
	ret
	.cfi_endproc
.LFE7:
	.size	count_p, .-count_p
	.globl	count_q
	.type	count_q, @function
count_q:
.LFB8:
	.cfi_startproc
	pushl	%esi
	.cfi_def_cfa_offset 8
	.cfi_offset 6, -8
	pushl	%ebx
	.cfi_def_cfa_offset 12
	.cfi_offset 3, -12
	movl	12(%esp), %esi
	movl	$32, %ecx
	movl	$-2147483648, %edx
	movl	$0, %eax
.L36:
	testl	%esi, %edx
	setne	%bl
	movzbl	%bl, %ebx
	addl	%ebx, %eax
	shrl	%edx
	subl	$1, %ecx
	jne	.L36
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 8
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 4
	ret
	.cfi_endproc
.LFE8:
	.size	count_q, .-count_q
	.globl	test_count_q
	.type	test_count_q, @function
test_count_q:
.LFB9:
	.cfi_startproc
	pushl	%esi
	.cfi_def_cfa_offset 8
	.cfi_offset 6, -8
	pushl	%ebx
	.cfi_def_cfa_offset 12
	.cfi_offset 3, -12
	movl	12(%esp), %esi
	movl	$0, %eax
	movl	$0, %ecx
	movl	$1, %ebx
.L40:
	movl	%ebx, %edx
	sall	%cl, %edx
	testl	%esi, %edx
	setne	%dl
	movzbl	%dl, %edx
	addl	%edx, %eax
	addl	$1, %ecx
	cmpl	$32, %ecx
	jne	.L40
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 8
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 4
	ret
	.cfi_endproc
.LFE9:
	.size	test_count_q, .-test_count_q
	.globl	count_r
	.type	count_r, @function
count_r:
.LFB10:
	.cfi_startproc
	pushl	%esi
	.cfi_def_cfa_offset 8
	.cfi_offset 6, -8
	pushl	%ebx
	.cfi_def_cfa_offset 12
	.cfi_offset 3, -12
	movl	12(%esp), %ebx
	movl	$32, %ecx
	movl	$1, %edx
	movl	$0, %eax
.L45:
	movl	%edx, %esi
	andl	%ebx, %esi
	cmpl	$1, %esi
	sbbl	$-1, %eax
	addl	%edx, %edx
	subl	$1, %ecx
	jne	.L45
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 8
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 4
	ret
	.cfi_endproc
.LFE10:
	.size	count_r, .-count_r
	.globl	test_count_r
	.type	test_count_r, @function
test_count_r:
.LFB11:
	.cfi_startproc
	pushl	%esi
	.cfi_def_cfa_offset 8
	.cfi_offset 6, -8
	pushl	%ebx
	.cfi_def_cfa_offset 12
	.cfi_offset 3, -12
	movl	12(%esp), %esi
	movl	$0, %eax
	movl	$0, %ecx
	movl	$1, %ebx
.L49:
	movl	%ebx, %edx
	sall	%cl, %edx
	testl	%esi, %edx
	setne	%dl
	movzbl	%dl, %edx
	addl	%edx, %eax
	addl	$1, %ecx
	cmpl	$32, %ecx
	jne	.L49
	popl	%ebx
	.cfi_restore 3
	.cfi_def_cfa_offset 8
	popl	%esi
	.cfi_restore 6
	.cfi_def_cfa_offset 4
	ret
	.cfi_endproc
.LFE11:
	.size	test_count_r, .-test_count_r
	.ident	"GCC: (Ubuntu 4.8.2-19ubuntu1) 4.8.2"
	.section	.note.GNU-stack,"",@progbits
